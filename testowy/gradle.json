{
  "url": "https://api.github.com/repos/gradle/gradle/releases/14182212",
  "assets_url": "https://api.github.com/repos/gradle/gradle/releases/14182212/assets",
  "upload_url": "https://uploads.github.com/repos/gradle/gradle/releases/14182212/assets{?name,label}",
  "html_url": "https://github.com/gradle/gradle/releases/tag/v5.0.0",
  "id": 14182212,
  "node_id": "MDc6UmVsZWFzZTE0MTgyMjEy",
  "tag_name": "v5.0.0",
  "target_commitish": "release",
  "name": "5.0",
  "draft": false,
  "author": {
    "login": "bamboo",
    "id": 51689,
    "node_id": "MDQ6VXNlcjUxNjg5",
    "avatar_url": "https://avatars1.githubusercontent.com/u/51689?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/bamboo",
    "html_url": "https://github.com/bamboo",
    "followers_url": "https://api.github.com/users/bamboo/followers",
    "following_url": "https://api.github.com/users/bamboo/following{/other_user}",
    "gists_url": "https://api.github.com/users/bamboo/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/bamboo/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/bamboo/subscriptions",
    "organizations_url": "https://api.github.com/users/bamboo/orgs",
    "repos_url": "https://api.github.com/users/bamboo/repos",
    "events_url": "https://api.github.com/users/bamboo/events{/privacy}",
    "received_events_url": "https://api.github.com/users/bamboo/received_events",
    "type": "User",
    "site_admin": false
  },
  "prerelease": false,
  "created_at": "2018-11-23T14:18:03Z",
  "published_at": "2018-11-26T13:02:02Z",
  "assets": [

  ],
  "tarball_url": "https://api.github.com/repos/gradle/gradle/tarball/v5.0.0",
  "zipball_url": "https://api.github.com/repos/gradle/gradle/zipball/v5.0.0",
  "body": "The Gradle team is excited to announce Gradle 5.0. \r\n\r\nThis release features [a production-ready Kotlin DSL](#kotlin-dsl-1.0), [dependency version alignment](#dependency-version-alignment) (similar to and usable with Maven BOMs), [task timeouts](#task-timeouts), [Java 11 support](#java-11-runtime-support), and more.\r\n\r\nThese release notes list what's new since Gradle 4.10. You can review the [highlights since Gradle 4.0 here](https://gradle.org/whats-new/gradle-5).\r\n\r\nRead the [Gradle 5.0 upgrade guide](https://docs.gradle.org/5.0/userguide/upgrading_version_4.html) to learn about breaking changes and considerations for upgrading from Gradle 4.x.\r\n\r\nWe would like to thank the following community contributors to this release of Gradle: [Jean-Baptiste Nizet](https://github.com/jnizet), [Jonathan Leitschuh](https://github.com/JLLeitschuh), [Ben McCann](https://github.com/benmccann), [Björn Kautler](https://github.com/Vampire), [Georg Friedrich](https://github.com/GFriedrich), [Stefan M.](https://github.com/StefMa),  [Xiang Li](https://github.com/lixiangconan),  [Theodore Ni](https://github.com/tjni), [James Justinic](https://github.com/jjustinic), [Mike Kobit](https://github.com/mkobit), [Alex Saveau](https://github.com/SUPERCILEX), [Kevin Macksamie](https://github.com/k-mack), [Cliffred van Velzen](https://github.com/cliffred), [Artem Zinnatullin](https://github.com/artem-zinnatullin), [Jakub Strzyżewski](https://github.com/shindouj), [Martin Dünkelmann](https://github.com/MartinX3), [Thad House](https://github.com/ThadHouse), [Dan Sanduleac](https://github.com/dansanduleac), [Felipe Lima](https://github.com/felipecsl), and [thc202](https://github.com/thc202).\r\n\r\n\r\n<a name=\"kotlin-dsl-1.0\"></a>\r\n## Kotlin DSL 1.0\r\n\r\nFirst and foremost, Gradle [Kotlin DSL is now production-ready](https://github.com/gradle/kotlin-dsl/releases/tag/v1.0.4) with it's 1.0 release! Authoring your build logic using Kotlin provides significant additional editing assistance in IDEs, including: improved completion, error highlighting, and refactoring tools. Please read our [Gradle Kotlin DSL Primer](https://docs.gradle.org/5.0/userguide/kotlin_dsl.html) and follow our [migrating build logic from Groovy to Kotlin guide](https://guides.gradle.org/migrating-build-logic-from-groovy-to-kotlin/) if you're interested. If you prefer the flexibility and dynamic features of Groovy, that's totally okay — the Groovy DSL will not be deprecated.\r\n\r\n![Kotlin DSL](https://user-images.githubusercontent.com/132773/47720016-32f04600-dc4d-11e8-90e3-128647bb0aab.png)\r\n\r\n<a name=\"dependency-version-alignment\"></a>\r\n## Dependency version alignment\r\n\r\nThis version of Gradle introduces [dependency version alignment](https://docs.gradle.org/5.0/userguide/managing_transitive_dependencies.html#sec:version_alignment).  This allows different modules belonging to the same logical group (`platform`) to have identical versions in a dependency graph.  Maven BOMs can be imported to define platforms as well.\r\n\r\n```kotlin\r\ndependencies {\r\n    // import a BOM. The versions used in this file will override any other version found in the graph\r\n    implementation(enforcedPlatform(\"org.springframework.boot:spring-boot-dependencies:1.5.8.RELEASE\"))\r\n    \r\n     // define dependencies without versions\r\n    implementation(\"com.google.code.gson:gson\")\r\n    implementation(\"dom4j:dom4j\")\r\n    \r\n     // this version will be overriden by the one found in the BOM\r\n    implementation(\"org.codehaus.groovy:groovy:1.8.6\")\r\n}\r\n```\r\n\r\nMore details about BOM import can be found in [this section of the userguide](https://docs.gradle.org/5.0/userguide/managing_transitive_dependencies.html#sec:bom_import).\r\n\r\n\r\n## Gradle build initialization features\r\n\r\n[`gradle init` functionality has been upgraded](https://docs.gradle.org/5.0/userguide/build_init_plugin.html) in this release: is now optionally _interactive_, includes new `kotlin-library` and `kotlin-application` project types, provides options for configuring project and package names, and more.\r\n\r\n![interactive gradle init](https://user-images.githubusercontent.com/132773/48338870-1568a680-e667-11e8-8be6-aa9fd1fb385a.gif)\r\n\r\n## Searchable documentation\r\n\r\nSearch for Gradle Docs is back.  The kind folks at [Algolia](https://www.algolia.com/) kindly host an index used to allow you to search the user manual and DSL reference.\r\n\r\n![Docsearch demo](https://user-images.githubusercontent.com/132773/47705948-43da9080-dc28-11e8-82b1-6108dca6f886.png)\r\n\r\n[Gradle API Javadocs](https://docs.gradle.org/5.0/javadoc/) now take advantage of Javadoc built-in autocomplete, making it easier to find classes and methods you're interested in.\r\n\r\n<a name=\"task-timeouts\"></a>\r\n## Task timeouts\r\n\r\nYou can now specify a timeout duration for a task, after which it will be interrupted.  Read more [about task timeouts](https://docs.gradle.org/5.0/userguide/more_about_tasks.html#sec:task_timeouts) in the docs.\r\n\r\n## HTTP retries during dependency resolution\r\n\r\nWhen Gradle attempts to connect to a remote repository via HTTP, if it fails, Gradle will retry before blacklisting the repository.\r\n\r\nNo extra configuration is needed. See the section on [HTTP retries](https://docs.gradle.org/5.0/userguide/introduction_dependency_management#sub:http-retries) for more information.\r\n\r\n## Performance features\r\n\r\nGradle can now be started as a low-prority process. This ensures that other applications like your IDE or browser stay responsive, even while a very demanding build is running.\r\n\r\nWhen using `@OutputFiles` or `@OutputDirectories` with an `Iterable` type, Gradle used to disable caching for the task.  This is no longer the case, and using such properties doesn't prevent the task from being cached.  The only remaining reason to disable caching for the task is if the output contains file trees.\r\n\r\nThe [JaCoCo plugin](https://docs.gradle.org/5.0/userguide/jacoco_plugin.html) plugin now works seamlessly with the build cache.  When applying the plugin with no extra configuration, the test task stays cacheable and parallel test execution can be used.\r\n\r\n<a name=\"java-11-runtime-support\"></a>\r\n## Java 11 runtime support\r\n\r\nJava enthusiasts will be happy to read that this release **supports running Gradle builds with JDK 11**.\r\n\r\n\r\n## Plugin authoring features\r\n\r\nThis release introduces useful changes for plugin and custom task authors, including an API for creating `SourceDirectorySet`s, improvements to the `Provider` API, and improved build cache compatibility.\r\n\r\n\r\n## Gradle Native features\r\n\r\nThe [Gradle Native project](https://github.com/gradle/gradle-native/blob/master/docs/RELEASE-NOTES.md#changes-included-in-gradle-50) continues to improve and evolve the native ecosystem support for Gradle.\r\n\r\n\r\n## Upgrade Instructions\r\n\r\nSwitch your build to use Gradle 5.0 by updating your wrapper properties:\r\n\r\n    ./gradlew wrapper --gradle-version=5.0\r\n\r\nStandalone downloads are available at [gradle.org/release-candidate](https://gradle.org/release-candidate). \r\n\r\n## Reporting Problems\r\n\r\nIf you find a problem with Gradle 5.0, please file a bug on [GitHub Issues](https://github.com/gradle/gradle/issues) adhering to our issue guidelines.  If you're not sure you're encountering a bug, please use the [forum](https://discuss.gradle.org/c/help-discuss).\r\n\r\nWe hope you will build happiness with Gradle 5.0, and we look forward to your feedback via [Twitter](https://twitter.com/gradle) or on [GitHub](https://github.com/gradle)."
}
